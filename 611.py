#coding=utf-8
# @brief: leetCode 611 题
# @author: BeyondShadow
# @date: 2018/01/18

# @brief：递归超时, 不能解决大批量重复数据: 1,1,1,1,2,2,2...
# class Solution(object):
#     def triangleNumber(self, nums):
#         self.len = len(nums)
#         level = 0
#         result = 0
#         _len = 0
#         self.ans = 0
#         nums.sort()
#         # print nums
#         # print self.len
#         self.recursion(nums, level, result, _len)
#         # print self.ans
#         return self.ans

#     def recursion(self, nums, level, result, _len):
#         if _len + (self.len-level+1) < 3:
#             return
#         if _len == 2:
#             lowerBound = self.lowerBound(nums[level:self.len], result-0.1)
#             # print result, level, lowerBound, nums[level:self.len], result[0]+result[1]-1.1
#             self.ans += lowerBound
#             return

#         for v in range(level, self.len):
#             result += nums[v]
#             self.recursion(nums, v+1, result, _len+1)
#             result -= nums[v]

#     def lowerBound(self, nums, key):
#         _len = len(nums)
#         left = 0
#         right = _len-1
#         while(left <= right):
#             mid = (left+right)/2
#             if key < nums[mid]:
#                 right = mid-1 
#             elif key > nums[mid]:
#                 left = mid + 1
#             else:
#                 return mid
#         return left

# @brief：跟递归方法一样，先固定一个边, 再去循环第二条边, 然后根据两条边去判断第三边
#         区别在于, 递归的时候第三边是二分查找获取, 该方法, 是在数组的两边做选择, 节省了第三边的查找
class Solution(object):
    def triangleNumber(self, nums):
        nums.sort()
        ans = 0
        _len = len(nums)
        right = _len-1
        mid = right-1
        left = 0
        while(right>=2):
            while(mid > left):
                if nums[left]+nums[mid] > nums[right]:
                    ans += (mid-left)
                    mid -=1
                else:
                    left += 1
            right -= 1
            left = 0
            mid = right -1
        return ans

s = Solution()
# params = [1,2, 2, 2]
# params = [1,2,2,2,2,2,2,2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
# params = [1,2,3,4,5,6]
# params = [15,44,16,43,47,47,45,27,46,2,28,12,49,22,36,12,6,48,28,19,18,34,46,38,42,3,21,3,54,35,21,54,13,46,50,23,53,43,5,48,40,48,10,31,15,35,50,8,48,55,52,18,54,16,35,4,43,55,34,13,5,13,27,41,19,22,21,26,48,4,15,1,45,51,13,49,22,33,18,18,52,27,6,41,7,11,48,17,37,31,42,3,45,22,6,45,42,5,28,39,35,30,24,21,49,49,47,54,28,42,40,26,47,8,28,1,44,4,45,23,49,53,12,48,16,27,36,21,18,41,43,9,55,27,37,41,5,43,12,45,0,34,19,48,14,22,43,14,13,38,15,7,41,8,37,13,45,31,47,38,45,38,50,44,20,40,39,38,26,29,24,10,30,23,53,38,39,3,37,4,15,22,29,4,5,4,4,19,35,30,30,49,16,32,36,26,37,53,46,28,24,13,12,29,2,36,21,19,15,11,22,10,30,29,40,14,17,39,36,17,23,39,13,29,51,8,55,10,10,47,39,1,46,27,18,7,49,38,27,14,26,35,5,46,54,12,18,30,11,6,29,52,44,38,51,22,26,24,41,13,39,27,0,36,38,7,37,7,9,25,4,8,52,33,46,33,42,43,17,23,20,23,41,8,47,16,48,46,35,35,24,0,17,12,40,52,11,16,7,33,6,21,30,32,55,52,52,28,11,35,39,15,27,47,52,0,11,41,50,10,13,10,5,40,21,0,27,12,39,20,27,39,19,28,5,51,45,19,3,1,15,53,31,45,36,33,22,4,22,20,30,7,54,13,19,48,32,13,38,9,4,22,26,22,43,5,47,14,15,21,15,48,10,15,47,22,9,52,4,16,22,47,9,13,44,15,5,19,2,55,36,49,25,52,21,5,19,46,2,51,45,12,54,47,47,23,17,26,52,36,49,4,42,18,20,22,47,18,37,28,19,11,21,13,37,51,2,43,36,43,0,40,50,27,40,41,31,41,53,2,17,4,35,52,22,25,21,16,5,41,54,5,40,3,38,12,10,53,48,28,9,7,46,28,3,9,44,29,39,3,41,15,29,30,47,21,12,27,53,7,34,53,53,50,53,23,46,52,40,21,3,46,49,17,14,36,10,54,51,22,25,34,49,49,26,45,45,17,30,19,6,49,41,9,19,25,51,23,55,11,0,1,13,26,15,41,38,19,51,21,11,8,55,25,21,15,18,15,48,4,37,36,5,45,13,13,16,26,0,41,8,51,20,38,28,46,3,37,52,6,24,11,18,39,25,48,16,41,50,44,48,7,29,14,15,28,7,46,15,16,46,20,35,6,27,10,17,1,42,30,37,41,37,52,55,4,6,17,27,33,45,37,11,29,16,42,33,39,35,33,30,25,37,6,25,22,43,31,42,25,15,27,19,15,10,1,45,24,23,17,17,33,12,53,30,44,30,2,30,8,45,49,48,46,52,13,41,29,46,39,50,51,19,55,36,29,23,8,11,49,43,45,51,2,41,53,6,38,52,26,45,0,55,14,42,25,10,4,39,5,47,42,55,37,35,53,14,27,54,41,19,34,38,43,22,41,23,12,13,17,36,23,41,15,34,24,44,21,3,25,10,14,43,16,35,45,1,22,26,20,5,8,37,42,47,1,2,33,2,21,8,36,50,6,45,40,48,16,12,1,55,0,53,51,35,19,14,3,21,33,2,54,33,2,18,53,34,19,23,32,27,39,13,48,27,12,7,50,16,49,35,27,12,29,6,34,7,18,50,6,49,24,1,18,53,27,36,0,37,42,51,12,38,8,29,38,11,24,4,2,15,19,1,25,9,30,50,30,8,15,50,52,25,8,29,44,7,41,30,45,9,23,20,49,15,16,48,34,10,44,52,22,4,6,2,8,23,13,39,7,31,29,4,35,43,2,33,34,24,41,38,47,5,38,28,34,1,44,14,13,12,8,6,0,24,9,4,39,37,32,18,38,15,29,14,11,40,34,12,16,7,7,50,18,24,30,15,13,41,42,47,22,17,14,38,46,45,22,12,12,12,25,11,24,41,8,51,51,25,46,15,13,47,38,20,0,21,7,30,49,42,43,53,24,19,17,46,50,15,33,1,42,14,55,26,17,41,39,23,46,35,39,16,16,37,50,38,24,20,32,51,22,53,50,10,39,4,2,27,1,25,18,40,50,9,35,37,27,37,39,29,2,38,32,6,30,32,4,43,46,21,9,40,45,49,34,37,4,55,19,47,3,42,33,13,43,3,3,22,49]
params = [16,24,29,6,48,24,44,27,7,6,17,51,37,19,23,0,20,42,49,41,46,35,24,52,47,32,1,14,30,51,30,38,2,30,14,27,4,23,10,11,50,52,4,41,13,54,32,6,44,48,16,26,28,51,34,24,19,31,45,40,44,0,25,11,20,33,37,15,43,41,20,38,54,35,43,53,13,20,6,20,0,34,54,54,20,20,32,3,9,9,1,54,11,24,51,42,29,41,3,48,5,11,33,40,52,25,4,12,18,0,2,1,23,38,3,44,34,11,29,51,40,53,5,13,51,24,4,0,13,9,2,52,50,43,10,8,11,36,19,5,13,19,15,47,29,24,42,34,14,32,46,35,23,39,2,26,3,43,9,55,32,46,6,25,24,35,15,27,47,52,54,37,8,4,21,26,37,24,3,51,1,42,54,28,2,52,11,3,15,6,36,13,50,15,4,35,35,34,23,18,30,7,8,20,51,10,14,29,17,31,20,49,10,50,37,42,36,38,46,47,5,1,12,42,28,31,44,6,22,28,42,9,37,20,39,3,52,1,39,41,27,0,39,20,18,3,19,41,20,32,54,48,28,22,33,52,51,51,33,27,46,11,48,37,32,35,23,3,52,33,54,15,39,40,49,3,3,16,43,1,11,2,53,15,53,19,48,6,28,48,13,51,11,10,49,21,31,50,18,37,41,39,43,29,32,34,39,18,24,54,15,47,18,11,23,36,26,24,29,36,9,51,35,20,32,33,46,3,10,37,18,25,22,36,27,22,3,40,49,1,16,26,5,26,51,33,5,1,28,40,18,17,40,27,41,12,36,54,47,19,40,22,0,49,29,47,13,29,37,34,55,49,41,50,42,49,13,42,42,6,54,25,4,12,26,26,19,24,8,13,10,16,46,53,13,37,11,31,3,26,13,47,18,10,18,39,29,46,34,10,12,47,15,35,6,5,0,51,42,55,30,7,37,24,55,20,0,5,13,42,48,33,49,28,45,16,27,20,33,4,19,48,18,48,30,30,22,55,31,32,8,41,47,3,26,48,36,19,33,23,11,12,10,6,45,41,30,34,21,41,21,27,23,18,24,43,52,49,25,30,52,10,3,1,46,27,33,16,8,15,38,55,32,45,41,50,28,36,4,36,49,7,3,29,52,1,8,33,48,45,49,6,32,6,18,50,5,15,30,47,42,47,45,26,41,40,25,14,25,8,12,32,6,32,43,6,43,26,51,39,32,5,29,40,25,12,32,10,51,8,23,9,4,11,8,30,38,46,12,1,32,51,22,50,31,50,46,52,33,45,33,37,34,53,3,7,24,28,32,36,42,30,13,34,6,24,21,16,37,27,30,31,18,48,14,4,8,53,6,26,23,28,40,14,18,0,9,8,44,13,46,8,22,48,26,4,54,9,17,34,42,24,11,7,40,40,2,12,40,1,10,48,13,47,5,30,5,2,24,16,24,51,52,45,24,47,50,53,41,52,10,16,26,54,45,4,5,1,5,12,36,18,11,29,39,51,25,47,28,2,50,3,37,10,29,43,46,40,1,54,44,38,21,34,4,43,4,30,50,4,51,13,24,14,10,32,45,34,43,14,50,3,42,43,30,30,51,24,8,11,33,8,22,43,52,51,9,25,19,49,2,32,44,52,50,29,35,33,29,55,45,35,42,24,14,55,43,16,30,32,40,19,47,7,11,36,15,9,49,20,31,16,6,17,21,31,47,39,46,54,35,46,52,50,27,55,6,0,32,8,0,47,32,51,55,24,52,27,25,42,5,51,40,29,10,41,6,51,43,12,32,4,14,1,36,20,11,30,50,31,26,3,14,25,15,40,3,7,23,4,42,19,38,7,0,32,18,43,40,21,35,8,47,31,32,9,33,2,7,19,53,9,9,42,49,12,33,25,51,32,54,15,6,16,12,42,12,25,48,37,17,24,54,43,54,8,11,43,2,54,8,13,45,36,50,52,29,21,23,8,38,48,36,44,5,2,50,32,25,26,43,25,52,53,16,41,26,34,23,52,48,55,14,12,8,27,31,53,10,17,28,35,33,12,29,44,25,39,35,49,40,18,49,9,46,42,3,38,37,44,36,34,23,11,27,37,54,24,29,35,20,36,29,28,40,4,11,13,51,41,5,51,35,12,19,24,15,22,14,30,36,33,38,6,27,1,40,13,44,40,47,44,2,16,48,33,38,35,28,5,22,11,27,49,2,22,50,30,2,40,40,54,48,23,4,22,35,4,55,5,10,33,0,48,55,10,17,29,55,33]
# params = [1, 2, 2, 2, 2]

s.triangleNumber(params)
# s.getCombination(4) 